{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name andel.text, :imports nil, :requires {tree andel.tree, andel.tree andel.tree, fz andel.fast-zip, andel.fast-zip andel.fast-zip}, :cljs.spec/speced-vars [], :uses nil, :defs {play {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 241, :column 7, :end-line 241, :end-column 11, :arglists (quote ([t operation]))}, :name andel.text/play, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 11, :method-params ([t operation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t operation]))}, forget-acc {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 129, :column 7, :end-line 129, :end-column 17, :arglists (quote ([loc]))}, :name andel.text/forget-acc, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 17, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, line-text {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 251, :column 7, :end-line 251, :end-column 16, :arglists (quote ([t i]))}, :name andel.text/line-text, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 16, :method-params ([t i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t i]))}, lines-count {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 182, :column 7, :end-line 182, :end-column 18, :arglists (quote ([t]))}, :name andel.text/lines-count, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 18, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, metrics {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 25, :column 10, :end-line 25, :end-column 17, :arglists (quote ([x]))}, :name andel.text/metrics, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nth-index {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 118, :column 7, :end-line 118, :end-column 16, :arglists (quote ([s c n]))}, :name andel.text/nth-index, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 16, :method-params ([s c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s c n]))}, text {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 195, :column 7, :end-line 195, :end-column 11, :arglists (quote ([loc l]))}, :name andel.text/text, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 11, :method-params ([loc l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc l]))}, by-offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 85, :column 7, :end-line 85, :end-column 16, :arglists (quote ([i]))}, :name andel.text/by-offset, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 16, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i]))}, make-text {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 68, :column 7, :end-line 68, :end-column 16, :arglists (quote ([s]))}, :name andel.text/make-text, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, mark-changed {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 65, :column 7, :end-line 65, :end-column 19, :arglists (quote ([loc]))}, :name andel.text/mark-changed, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 19, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, metrics-line {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 82, :column 7, :end-line 82, :end-column 19, :arglists (quote ([m]))}, :name andel.text/metrics-line, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 19, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, scan-to-line {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 145, :column 7, :end-line 145, :end-column 19, :arglists (quote ([loc i]))}, :name andel.text/scan-to-line, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 19, :method-params ([loc i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc i]))}, insert {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 202, :column 7, :end-line 202, :end-column 13, :arglists (quote ([loc s]))}, :name andel.text/insert, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 13, :method-params ([loc s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc s]))}, scan-to-offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 132, :column 7, :end-line 132, :end-column 21, :arglists (quote ([loc i]))}, :name andel.text/scan-to-offset, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 21, :method-params ([loc i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc i]))}, tree-config {:name andel.text/tree-config, :file "src/cljc/andel/text.cljc", :line 57, :column 1, :end-line 57, :end-column 17, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 57, :column 6, :end-line 57, :end-column 17}, :tag cljs.core/IMap}, by-line {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 88, :column 7, :end-line 88, :end-column 14, :arglists (quote ([i]))}, :name andel.text/by-line, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 14, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i]))}, string-merge-thresh {:name andel.text/string-merge-thresh, :file "src/cljc/andel/text.cljc", :line 51, :column 1, :end-line 51, :end-column 25, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 51, :column 6, :end-line 51, :end-column 25}, :tag any}, reset {:name andel.text/reset, :file "src/cljc/andel/text.cljc", :line 234, :column 1, :end-line 234, :end-column 11, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 234, :column 6, :end-line 234, :end-column 11}}, zipper {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 74, :column 7, :end-line 74, :end-column 13, :arglists (quote ([tree]))}, :name andel.text/zipper, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 13, :method-params ([tree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tree]))}, r-f {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 37, :column 7, :end-line 37, :end-column 10, :arglists (quote ([] [[x1 x2 :as acc] [y1 y2]])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [[x1 x2 :as acc] [y1 y2]]), :arglists ([] [[x1 x2 :as acc] [y1 y2]]), :arglists-meta (nil nil)}}, :name andel.text/r-f, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [[x1 x2 :as acc] [y1 y2]]), :arglists ([] [[x1 x2 :as acc] [y1 y2]]), :arglists-meta (nil nil)}, :method-params ([] [[x1 x2 :as acc] [y1 y2]]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists ([] [[x1 x2 :as acc] [y1 y2]])}, offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 92, :column 7, :end-line 92, :end-column 13, :arglists (quote ([loc]))}, :name andel.text/offset, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 13, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, line-length {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 157, :column 7, :end-line 157, :end-column 18, :arglists (quote ([loc]))}, :name andel.text/line-length, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 18, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, retain {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 142, :column 7, :end-line 142, :end-column 13, :arglists (quote ([loc l]))}, :name andel.text/retain, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 13, :method-params ([loc l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc l]))}, split-string {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 53, :column 7, :end-line 53, :end-column 19, :arglists (quote ([x]))}, :name andel.text/split-string, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, delete {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 214, :column 7, :end-line 214, :end-column 13, :arglists (quote ([loc l]))}, :name andel.text/delete, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 13, :method-params ([loc l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc l]))}, lazy-text {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 165, :column 7, :end-line 165, :end-column 16, :arglists (quote ([loc l]))}, :name andel.text/lazy-text, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 16, :method-params ([loc l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc l]))}, string-thresh {:name andel.text/string-thresh, :file "src/cljc/andel/text.cljc", :line 50, :column 1, :end-line 50, :end-column 19, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 50, :column 6, :end-line 50, :end-column 19}, :tag number}, count-of {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 110, :column 7, :end-line 110, :end-column 15, :arglists (quote ([s c from to]))}, :name andel.text/count-of, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 15, :method-params ([s c from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 4, :fn-var true, :arglists (quote ([s c from to]))}, split-count {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 43, :column 7, :end-line 43, :end-column 18, :arglists (quote ([i j thresh]))}, :name andel.text/split-count, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 18, :method-params ([i j thresh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([i j thresh]))}, debug-tree {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 236, :column 7, :end-line 236, :end-column 17, :arglists (quote ([t]))}, :name andel.text/debug-tree, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 17, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, root {:name andel.text/root, :file "src/cljc/andel/text.cljc", :line 77, :column 1, :end-line 77, :end-column 10, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 77, :column 6, :end-line 77, :end-column 10}}, line {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 101, :column 7, :end-line 101, :end-column 11, :arglists (quote ([loc]))}, :name andel.text/line, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 11, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, text-length {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 189, :column 7, :end-line 189, :end-column 18, :arglists (quote ([t]))}, :name andel.text/text-length, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 18, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, metrics-offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/text.cljc", :line 79, :column 7, :end-line 79, :end-column 21, :arglists (quote ([m]))}, :name andel.text/metrics-offset, :variadic false, :file "src/cljc/andel/text.cljc", :end-column 21, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:path :children :l :leaf-underflown? :split-thresh :merge-leafs :changed? :split-leaf :leaf-overflown? :metrics-fn :reducing-fn}, :order [:reducing-fn :metrics-fn :leaf-overflown? :split-thresh :split-leaf :leaf-underflown? :merge-leafs :path :changed? :l :children]}, :doc nil}