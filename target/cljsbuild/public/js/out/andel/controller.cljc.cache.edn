{:rename-macros {}, :renames {}, :externs {Error {}, Number {POSITIVE_INFINITY {}}}, :use-macros {}, :excludes #{}, :name andel.controller, :imports nil, :requires {cstring clojure.string, clojure.string clojure.string, utils andel.utils, andel.utils andel.utils, text andel.text, andel.text andel.text, intervals andel.intervals, andel.intervals andel.intervals}, :cljs.spec/speced-vars [], :uses nil, :defs {edit-at-line-col {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 81, :column 7, :end-line 81, :end-column 23, :arglists (quote ([{:keys [text], :as state} line-col f]))}, :name andel.controller/edit-at-line-col, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 23, :method-params ([p__63309 line-col f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [text], :as state} line-col f]))}, end {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 224, :column 7, :end-line 224, :end-column 10, :arglists (quote ([{{:keys [caret]} :editor, {:keys [text]} :document, :as state} selection?]))}, :name andel.controller/end, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 10, :method-params ([p__63391 selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [caret]} :editor, {:keys [text]} :document, :as state} selection?]))}, get-view-in-lines {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 187, :column 7, :end-line 187, :end-column 24, :arglists (quote ([viewport metrics]))}, :name andel.controller/get-view-in-lines, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 24, :method-params ([viewport metrics]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([viewport metrics]))}, set-caret-at-line-end {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 145, :column 7, :end-line 145, :end-column 28, :arglists (quote ([state line selection?]))}, :name andel.controller/set-caret-at-line-end, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 28, :method-params ([state line selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state line selection?]))}, drop-selection-on-esc {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 244, :column 7, :end-line 244, :end-column 28, :arglists (quote ([state]))}, :name andel.controller/drop-selection-on-esc, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 28, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, count-lines-in-view {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 182, :column 7, :end-line 182, :end-column 26, :arglists (quote ([viewport metrics]))}, :name andel.controller/count-lines-in-view, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 26, :method-params ([viewport metrics]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([viewport metrics]))}, translate-caret {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 22, :column 7, :end-line 22, :end-column 22, :arglists (quote ([caret text delta-offset]))}, :name andel.controller/translate-caret, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 22, :method-params ([caret text delta-offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([caret text delta-offset]))}, edit-at-offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 70, :column 7, :end-line 70, :end-column 21, :arglists (quote ([{:keys [document], :as state} offset f]))}, :name andel.controller/edit-at-offset, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 21, :method-params ([p__63304 offset f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [document], :as state} offset f]))}, drop-virtual-position {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 7, :column 7, :end-line 7, :end-column 28, :arglists (quote ([caret]))}, :name andel.controller/drop-virtual-position, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 28, :method-params ([caret]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([caret]))}, drop-selection {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 55, :column 7, :end-line 55, :end-column 21, :arglists (quote ([{{:keys [offset]} :caret, :as editor}]))}, :name andel.controller/drop-selection, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 21, :method-params ([p__63299]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [offset]} :caret, :as editor}]))}, get-line-ident {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 118, :column 7, :end-line 118, :end-column 21, :arglists (quote ([text line]))}, :name andel.controller/get-line-ident, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 21, :method-params ([text line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text line]))}, home {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 218, :column 7, :end-line 218, :end-column 11, :arglists (quote ([{{:keys [caret]} :editor, {:keys [text]} :document, :as state} selection?]))}, :name andel.controller/home, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 11, :method-params ([p__63384 selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [caret]} :editor, {:keys [text]} :document, :as state} selection?]))}, pg-move {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 209, :column 7, :end-line 209, :end-column 14, :arglists (quote ([{:keys [document viewport], :as state} dir selection?]))}, :name andel.controller/pg-move, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 14, :method-params ([p__63375 dir selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [document viewport], :as state} dir selection?]))}, set-caret-at-line-begining {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 141, :column 7, :end-line 141, :end-column 33, :arglists (quote ([state line selection?]))}, :name andel.controller/set-caret-at-line-begining, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 33, :method-params ([state line selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state line selection?]))}, type-in {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 104, :column 7, :end-line 104, :end-column 14, :arglists (quote ([{:keys [editor], :as state} str]))}, :name andel.controller/type-in, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 14, :method-params ([p__63322 str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [editor], :as state} str]))}, on-enter {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 125, :column 7, :end-line 125, :end-column 15, :arglists (quote ([{:keys [editor document], :as state}]))}, :name andel.controller/on-enter, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 15, :method-params ([p__63327]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [editor document], :as state}]))}, move-view-if-needed {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 194, :column 7, :end-line 194, :end-column 26, :arglists (quote ([{:keys [document editor viewport], :as state}]))}, :name andel.controller/move-view-if-needed, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 26, :method-params ([p__63363]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [document editor viewport], :as state}]))}, selection-length {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 51, :column 7, :end-line 51, :end-column 23, :arglists (quote ([[left right :as selection]]))}, :name andel.controller/selection-length, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 23, :method-params ([p__63295]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[left right :as selection]]))}, delete-under-selection {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 90, :column 7, :end-line 90, :end-column 29, :arglists (quote ([{:keys [editor document], :as state}]))}, :name andel.controller/delete-under-selection, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 29, :method-params ([p__63313]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [editor document], :as state}]))}, delete {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 165, :column 7, :end-line 165, :end-column 13, :arglists (quote ([{:keys [document editor], :as state}]))}, :name andel.controller/delete, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 13, :method-params ([p__63344]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [document editor], :as state}]))}, set-caret-at-offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 13, :column 7, :end-line 13, :end-column 26, :arglists (quote ([caret text new-offset]))}, :name andel.controller/set-caret-at-offset, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 26, :method-params ([caret text new-offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([caret text new-offset]))}, caret->offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 10, :column 7, :end-line 10, :end-column 20, :arglists (quote ([{:keys [offset], :as caret}]))}, :name andel.controller/caret->offset, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 20, :method-params ([p__63283]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [offset], :as caret}]))}, update-selection {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([[from to :as selection] old-caret new-caret selection?]))}, :name andel.controller/update-selection, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 23, :method-params ([p__63291 old-caret new-caret selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 4, :fn-var true, :arglists (quote ([[from to :as selection] old-caret new-caret selection?]))}, set-view-to-line {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 179, :column 7, :end-line 179, :end-column 23, :arglists (quote ([state line metrics]))}, :name andel.controller/set-view-to-line, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 23, :method-params ([state line metrics]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state line metrics]))}, set-caret-at-grid-pos {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 131, :column 7, :end-line 131, :end-column 28, :arglists (quote ([{:keys [editor document], :as state} line-col selection?]))}, :name andel.controller/set-caret-at-grid-pos, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 28, :method-params ([p__63330 line-col selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [editor document], :as state} line-col selection?]))}, translate-caret-verticaly {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 25, :column 7, :end-line 25, :end-column 32, :arglists (quote ([{v-col :v-col, :as caret} text delta-line]))}, :name andel.controller/translate-caret-verticaly, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 32, :method-params ([p__63286 text delta-line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{v-col :v-col, :as caret} text delta-line]))}, set-text {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 58, :column 7, :end-line 58, :end-column 15, :arglists (quote ([state text]))}, :name andel.controller/set-text, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 15, :method-params ([state text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state text]))}, move-caret {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 230, :column 7, :end-line 230, :end-column 17, :arglists (quote ([{{:keys [text]} :document, {:keys [caret selection]} :editor, :as state} dir selection?]))}, :name andel.controller/move-caret, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 17, :method-params ([p__63398 dir selection?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{{:keys [text]} :document, {:keys [caret selection]} :editor, :as state} dir selection?]))}, edit-at-caret {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 86, :column 7, :end-line 86, :end-column 20, :arglists (quote ([state fn]))}, :name andel.controller/edit-at-caret, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 20, :method-params ([state fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state fn]))}, get-caret-line {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 113, :column 7, :end-line 113, :end-column 21, :arglists (quote ([caret text]))}, :name andel.controller/get-caret-line, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 21, :method-params ([caret text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([caret text]))}, set-selection-under-caret {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 100, :column 7, :end-line 100, :end-column 32, :arglists (quote ([editor]))}, :name andel.controller/set-selection-under-caret, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 32, :method-params ([editor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([editor]))}, add-markup {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 65, :column 7, :end-line 65, :end-column 17, :arglists (quote ([state markup]))}, :name andel.controller/add-markup, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 17, :method-params ([state markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state markup]))}, backspace {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/controller.cljc", :line 150, :column 7, :end-line 150, :end-column 16, :arglists (quote ([{:keys [editor document], :as state}]))}, :name andel.controller/backspace, :variadic false, :file "src/cljc/andel/controller.cljc", :end-column 16, :method-params ([p__63338]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [editor document], :as state}]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:caret :else :offset :view-size :pos :first-invalid :markup :document :line :col :editor :timestamp :v-col :selection :viewport :metrics :text}, :order [:v-col :offset :line :col :else :caret :selection :document :text :first-invalid :timestamp :markup :editor :viewport :pos :view-size :metrics]}, :doc nil}