{:rename-macros {}, :renames {}, :externs {Date {now {}}, Error {}, Object {}}, :use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name andel.throttling, :imports nil, :requires {cljs.core.async cljs.core.async}, :cljs.spec/speced-vars [], :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, put! cljs.core.async}, :defs {get-time! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/throttling.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([]))}, :name andel.throttling/get-time!, :variadic false, :file "src/cljs/andel/throttling.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, throttle {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/throttling.cljs", :line 10, :column 7, :end-line 10, :end-column 15, :arglists (quote ([f ms]))}, :name andel.throttling/throttle, :variadic false, :file "src/cljs/andel/throttling.cljs", :end-column 15, :method-params ([f ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f ms]))}, debounce {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/throttling.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([in ms]))}, :name andel.throttling/debounce, :variadic false, :file "src/cljs/andel/throttling.cljs", :end-column 15, :method-params ([in ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in ms]))}, debounce-wrapper {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/throttling.cljs", :line 36, :column 7, :end-line 36, :end-column 23, :arglists (quote ([f ms]))}, :name andel.throttling/debounce-wrapper, :variadic false, :file "src/cljs/andel/throttling.cljs", :end-column 23, :method-params ([f ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f ms]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}