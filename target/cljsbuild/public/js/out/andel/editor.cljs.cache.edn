{:rename-macros {}, :renames {}, :externs {document {createElement {}, fonts {check {}}, createTextNode {}}, Object {getContext {}, font {}, measureText {}, width {}, firstChild {}, removeChild {}, appendChild {}}, Date {prototype {getTime {}}}, Error {}, React {createElement {}}, createReactClass {}, ReactDOM {findDOMNode {}}, window {addEventListener {}}, Math {abs {}}}, :use-macros {go cljs.core.async.macros, $! reagent.interop, $ reagent.interop}, :excludes #{}, :name andel.editor, :imports nil, :requires {create-react-class create-react-class, andel.styles andel.styles, andel.lexer andel.lexer, andel.controller andel.controller, intervals andel.intervals, a cljs.core.async, text andel.text, controller andel.controller, andel.intervals andel.intervals, tree andel.tree, lexer andel.lexer, cljs.core.async cljs.core.async, keybind andel.keybind, clojure.set clojure.set, clojure.core.async cljs.core.async, andel.theme andel.theme, garden.stylesheet garden.stylesheet, theme andel.theme, andel.utils andel.utils, g garden.core, react-dom react-dom, utils andel.utils, andel.text andel.text, andel.keybind andel.keybind, styles andel.styles, andel.tree andel.tree, garden.core garden.core}, :cljs.spec/speced-vars [], :uses {at-keyframes garden.stylesheet}, :defs {*editors-common {:name andel.editor/*editors-common, :file "src/cljs/andel/editor.cljs", :line 77, :column 1, :end-line 77, :end-column 25, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 77, :column 10, :end-line 77, :end-column 25}, :tag any}, deliver-lexems! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 80, :column 7, :end-line 80, :end-column 22, :arglists (quote ([{:keys [req-ts tokens index text]} state-ref]))}, :name andel.editor/deliver-lexems!, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 22, :method-params ([p__64680 state-ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [req-ts tokens index text]} state-ref]))}, load-editors-common! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 51, :column 7, :end-line 51, :end-column 27, :arglists (quote ([]))}, :name andel.editor/load-editors-common!, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-selection {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 187, :column 7, :end-line 187, :end-column 23, :arglists (quote ([[from to] {:keys [width], :as metrics}]))}, :name andel.editor/render-selection, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 23, :method-params ([p__64954 p__64955]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[from to] {:keys [width], :as metrics}]))}, token-class {:name andel.editor/token-class, :file "src/cljs/andel/editor.cljs", :line 221, :column 1, :end-line 221, :end-column 17, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 221, :column 6, :end-line 221, :end-column 17}, :tag function}, map->LineInfo {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 298, :column 12, :end-line 298, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__64991]))}, :name andel.editor/map->LineInfo, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 20, :method-params ([G__64991]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__64991]))}, dom {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 300, :column 7, :end-line 300, :end-column 10, :arglists (quote ([el]))}, :name andel.editor/dom, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 10, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, editor-viewport {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 412, :column 7, :end-line 412, :end-column 22, :arglists (quote ([props]))}, :name andel.editor/editor-viewport, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 22, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, next-tick {:name andel.editor/next-tick, :file "src/cljs/andel/editor.cljs", :line 495, :column 1, :end-line 495, :end-column 15, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 495, :column 6, :end-line 495, :end-column 15}, :tag any}, def-fun {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 321, :column 7, :end-line 321, :end-column 14, :arglists (quote ([f]))}, :name andel.editor/def-fun, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 14, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, measure-async {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 38, :column 7, :end-line 38, :end-column 20, :arglists (quote ([font-name size spacing]))}, :name andel.editor/measure-async, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 20, :method-params ([font-name size spacing]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([font-name size spacing]))}, conj-child! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 181, :column 7, :end-line 181, :end-column 18, :arglists (quote ([e c]))}, :name andel.editor/conj-child!, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 18, :method-params ([e c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e c]))}, el {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 156, :column 7, :end-line 156, :end-column 9, :arglists (quote ([tag props] [tag props children])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([tag props] [tag props children]), :arglists ([tag props] [tag props children]), :arglists-meta (nil nil)}}, :name andel.editor/el, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 9, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([tag props] [tag props children]), :arglists ([tag props] [tag props children]), :arglists-meta (nil nil)}, :method-params ([tag props] [tag props children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 3, :fn-var true, :arglists ([tag props] [tag props children])}, run-lexer-loop! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 93, :column 7, :end-line 93, :end-column 22, :arglists (quote ([state-ref]))}, :name andel.editor/run-lexer-loop!, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 22, :method-params ([state-ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state-ref]))}, scroll-on-event {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 475, :column 7, :end-line 475, :end-column 22, :arglists (quote ([state]))}, :name andel.editor/scroll-on-event, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 475, :end-line 475, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, editor-view {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 559, :column 7, :end-line 559, :end-column 18, :arglists (quote ([*editor-state]))}, :name andel.editor/editor-view, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 18, :method-params ([*editor-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 559, :end-line 559, :max-fixed-arity 1, :fn-var true, :arglists (quote ([*editor-state]))}, render-background-markup {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 265, :column 7, :end-line 265, :end-column 31, :arglists (quote ([markup {:keys [height width spacing]}]))}, :name andel.editor/render-background-markup, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 31, :method-params ([markup p__64981]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 2, :fn-var true, :arglists (quote ([markup {:keys [height width spacing]}]))}, prepare-markup {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 399, :column 7, :end-line 399, :end-column 21, :arglists (quote ([markup from to]))}, :name andel.editor/prepare-markup, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 21, :method-params ([markup from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 3, :fn-var true, :arglists (quote ([markup from to]))}, render-line {:name andel.editor/render-line, :file "src/cljs/andel/editor.cljs", :line 332, :column 1, :end-line 332, :end-column 17, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 332, :column 6, :end-line 332, :end-column 17}, :tag any}, render-text {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 236, :column 7, :end-line 236, :end-column 18, :arglists (quote ([text tokens markup {:keys [height]}]))}, :name andel.editor/render-text, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 18, :method-params ([text tokens markup p__64964]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 4, :fn-var true, :arglists (quote ([text tokens markup {:keys [height]}]))}, render-caret {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 203, :column 7, :end-line 203, :end-column 19, :arglists (quote ([col {:keys [width], :as metrics}]))}, :name andel.editor/render-caret, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 19, :method-params ([col p__64961]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 2, :fn-var true, :arglists (quote ([col {:keys [width], :as metrics}]))}, set-viewport-size {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 492, :column 7, :end-line 492, :end-column 24, :arglists (quote ([state width height]))}, :name andel.editor/set-viewport-size, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 24, :method-params ([state width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 492, :end-line 492, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state width height]))}, ->LineInfo {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 298, :column 12, :end-line 298, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([lineText lineTokens lineMarkup selection caretIndex index]))}, :name andel.editor/->LineInfo, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 20, :method-params ([lineText lineTokens lineMarkup selection caretIndex index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 298, :end-line 298, :max-fixed-arity 6, :fn-var true, :arglists (quote ([lineText lineTokens lineMarkup selection caretIndex index]))}, render-attrs {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 167, :column 7, :end-line 167, :end-column 19, :arglists (quote ([m]))}, :name andel.editor/render-attrs, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 19, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, infinity? {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 185, :column 7, :end-line 185, :end-column 16, :arglists (quote ([x]))}, :name andel.editor/infinity?, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, LineInfo {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name andel.editor/LineInfo, :file "src/cljs/andel/editor.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 298, :record true, :end-line 298, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, attach-lexer! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 120, :column 7, :end-line 120, :end-column 20, :arglists (quote ([state-ref]))}, :name andel.editor/attach-lexer!, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 20, :method-params ([state-ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state-ref]))}, make-node {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 171, :column 7, :end-line 171, :end-column 16, :arglists (quote ([tag]))}, :name andel.editor/make-node, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 16, :method-params ([tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tag]))}, measure {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([font-name height spacing]))}, :name andel.editor/measure, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 14, :method-params ([font-name height spacing]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([font-name height spacing]))}, font->str {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([font-name height]))}, :name andel.editor/font->str, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 16, :method-params ([font-name height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([font-name height]))}, style {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 163, :column 7, :end-line 163, :end-column 12, :arglists (quote ([m]))}, :name andel.editor/style, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 12, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, editor-cmp {:name andel.editor/editor-cmp, :file "src/cljs/andel/editor.cljs", :line 502, :column 1, :end-line 502, :end-column 16, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 502, :column 6, :end-line 502, :end-column 16}, :tag js}, make-editor-state {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 131, :column 7, :end-line 131, :end-column 24, :arglists (quote ([]))}, :name andel.editor/make-editor-state, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, scroll {:name andel.editor/scroll, :file "src/cljs/andel/editor.cljs", :line 362, :column 1, :end-line 362, :end-column 12, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 362, :column 6, :end-line 362, :end-column 12}, :tag js}, make-text-node {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 174, :column 7, :end-line 174, :end-column 21, :arglists (quote ([s]))}, :name andel.editor/make-text-node, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 21, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, line-selection {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 351, :column 7, :end-line 351, :end-column 21, :arglists (quote ([[from to] [line-start-offset line-end-offset]]))}, :name andel.editor/line-selection, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 21, :method-params ([p__65001 p__65002]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 351, :end-line 351, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[from to] [line-start-offset line-end-offset]]))}, assoc-attr! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 177, :column 7, :end-line 177, :end-column 18, :arglists (quote ([e a v]))}, :name andel.editor/assoc-attr!, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 18, :method-params ([e a v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 3, :fn-var true, :arglists (quote ([e a v]))}, push! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 232, :column 7, :end-line 232, :end-column 12, :arglists (quote ([a x]))}, :name andel.editor/push!, :variadic false, :file "src/cljs/andel/editor.cljs", :end-column 12, :method-params ([a x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a x]))}, real-dom {:name andel.editor/real-dom, :file "src/cljs/andel/editor.cljs", :line 277, :column 1, :end-line 277, :end-column 14, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/editor.cljs", :line 277, :column 6, :end-line 277, :end-column 14}, :tag js}}, :cljs.spec/registry-ref [], :require-macros {reagent.interop reagent.interop, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:modespec lineMarkup :infinity :onMouseWheel :caret selection :remove :editor-view :animation :color caretIndex :render-line :pre :index :lexer :else :font-name :font-size :offset :top :view-size :overflow :lineTokens :lineText :margin-left :background-color :width :background :lines :.render-line :req-ts :pos :recur index :output :absolute lineText :style :first-invalid :markup :div lineTokens :document :z-index :priority :from :foreground :hidden :opacity :class :prev :.line-text :editor :styles :position :tokens :child :res :input :line-text :lineMarkup :bg-05 :onResize :add :timestamp :v-col :selection :viewport :metrics :user-select :none :line-info :relative :caretIndex :lexer-broker :font-family :hashes :height :spacing :left :font-metrics :text :span :to :margin}, :order [:width :height :spacing :font-name :recur :else :font-family :font-size :color :margin :pre :editor :opacity :position :left :user-select :top :absolute :none :.line-text :line-text :font-metrics :req-ts :tokens :index :text :document :timestamp :lines :hashes :first-invalid :modespec :lexer-broker :input :output :priority :lexer :viewport :markup :caret :selection :offset :v-col :pos :view-size :metrics :div :style :background-color :margin-left :z-index :bg-05 :animation :foreground :add :from :remove :to :res :prev :styles :span :class :background :lineText :lineTokens :lineMarkup :caretIndex lineText lineTokens lineMarkup selection caretIndex index :line-info :render-line :infinity :onResize :child :onMouseWheel :hidden :.render-line :overflow :relative :editor-view]}, :doc nil}