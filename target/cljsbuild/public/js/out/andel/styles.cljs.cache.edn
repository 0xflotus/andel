{:rename-macros {}, :renames {}, :externs {document {getElementsByTagName {}, body {}, createElement {}, getElementById {}}, Object {setAttribute {}}, Error {}}, :use-macros {go cljs.core.async.macros, $! reagent.interop, $ reagent.interop}, :excludes #{}, :name andel.styles, :imports nil, :requires {a cljs.core.async, cljs.core.async cljs.core.async, clojure.core.async cljs.core.async, g garden.core, garden.core garden.core}, :cljs.spec/speced-vars [], :uses nil, :defs {head {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 8, :column 7, :end-line 8, :end-column 11, :arglists (quote ([]))}, :name andel.styles/head, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, body {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([]))}, :name andel.styles/body, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, wait-for-all {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 16, :column 7, :end-line 16, :end-column 19, :arglists (quote ([prs]))}, :name andel.styles/wait-for-all, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 19, :method-params ([prs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([prs]))}, include-script {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 20, :column 7, :end-line 20, :end-column 21, :arglists (quote ([src]))}, :name andel.styles/include-script, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 21, :method-params ([src]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([src]))}, include-style {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 31, :column 7, :end-line 31, :end-column 20, :arglists (quote ([src cb]))}, :name andel.styles/include-style, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 20, :method-params ([src cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([src cb]))}, defstyle-impl {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 41, :column 8, :end-line 41, :end-column 21, :private true, :arglists (quote ([key style] [style])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([key style] [style]), :arglists ([key style] [style]), :arglists-meta (nil nil)}}, :private true, :name andel.styles/defstyle-impl, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([key style] [style]), :arglists ([key style] [style]), :arglists-meta (nil nil)}, :method-params ([key style] [style]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists ([key style] [style])}, defstyle {:name andel.styles/defstyle, :file "src/cljs/andel/styles.cljs", :line 56, :column 1, :end-line 56, :end-column 18, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 56, :column 10, :end-line 56, :end-column 18}, :tag any}, style->class {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 59, :column 7, :end-line 59, :end-column 19, :arglists (quote ([style]))}, :name andel.styles/style->class, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 19, :method-params ([style]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([style]))}, px {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/styles.cljs", :line 65, :column 7, :end-line 65, :end-column 9, :arglists (quote ([x]))}, :name andel.styles/px, :variadic false, :file "src/cljs/andel/styles.cljs", :end-column 9, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :cljs.spec/registry-ref [], :require-macros {reagent.interop reagent.interop, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:done}, :order [:done]}, :doc nil}