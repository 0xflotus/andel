{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name andel.intervals, :imports nil, :requires {tree andel.tree, andel.tree andel.tree}, :cljs.spec/speced-vars [], :uses nil, :defs {remove-leaf {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 209, :column 7, :end-line 209, :end-column 18, :arglists (quote ([loc]))}, :name andel.intervals/remove-leaf, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 18, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, loc->data {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 59, :column 7, :end-line 59, :end-column 16, :arglists (quote ([loc]))}, :name andel.intervals/loc->data, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 16, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, reducing-fn {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([] [left right])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [left right]), :arglists ([] [left right]), :arglists-meta (nil nil)}}, :name andel.intervals/reducing-fn, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [left right]), :arglists ([] [left right]), :arglists-meta (nil nil)}, :method-params ([] [left right]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists ([] [left right])}, process-interval {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 252, :column 7, :end-line 252, :end-column 23, :arglists (quote ([interval offset size]))}, :name andel.intervals/process-interval, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 23, :method-params ([interval offset size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 3, :fn-var true, :arglists (quote ([interval offset size]))}, update-leaf-length {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 118, :column 7, :end-line 118, :end-column 25, :arglists (quote ([loc f]))}, :name andel.intervals/update-leaf-length, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 25, :method-params ([loc f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc f]))}, loc->metrics {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 56, :column 7, :end-line 56, :end-column 19, :arglists (quote ([loc]))}, :name andel.intervals/loc->metrics, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 19, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, next-changed {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 224, :column 7, :end-line 224, :end-column 19, :arglists (quote ([loc offset]))}, :name andel.intervals/next-changed, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 19, :method-params ([loc offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc offset]))}, update-leaf {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 100, :column 7, :end-line 100, :end-column 18, :arglists (quote ([loc f]))}, :name andel.intervals/update-leaf, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 18, :method-params ([loc f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc f]))}, collect-with-remove-changed {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 287, :column 7, :end-line 287, :end-column 34, :arglists (quote ([itree offset size]))}, :name andel.intervals/collect-with-remove-changed, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 34, :method-params ([itree offset size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 3, :fn-var true, :arglists (quote ([itree offset size]))}, add-intervals {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 203, :column 7, :end-line 203, :end-column 20, :arglists (quote ([itree intervals]))}, :name andel.intervals/add-intervals, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 20, :method-params ([itree intervals]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 2, :fn-var true, :arglists (quote ([itree intervals]))}, by-offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 51, :column 7, :end-line 51, :end-column 16, :arglists (quote ([offset]))}, :name andel.intervals/by-offset, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 16, :method-params ([offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([offset]))}, intervals->tree {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 172, :column 7, :end-line 172, :end-column 22, :arglists (quote ([intervals]))}, :name andel.intervals/intervals->tree, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 22, :method-params ([intervals]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([intervals]))}, mark-changed {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 48, :column 7, :end-line 48, :end-column 19, :arglists (quote ([loc]))}, :name andel.intervals/mark-changed, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 19, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, map->IntervalLeaf {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 10, :column 12, :end-line 10, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__63135]))}, :name andel.intervals/map->IntervalLeaf, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 24, :method-params ([G__63135]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__63135]))}, tree-config {:name andel.intervals/tree-config, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 37, :column 1, :end-line 37, :end-column 17, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 37, :column 6, :end-line 37, :end-column 17}, :tag cljs.core/IMap}, delete-range {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 326, :column 7, :end-line 326, :end-column 19, :arglists (quote ([itree [offset size]]))}, :name andel.intervals/delete-range, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 19, :method-params ([itree p__63189]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 2, :fn-var true, :arglists (quote ([itree [offset size]]))}, tree->intervals {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 128, :column 7, :end-line 128, :end-column 22, :arglists (quote ([tr]))}, :name andel.intervals/tree->intervals, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 22, :method-params ([tr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tr]))}, ->IntervalNode {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 8, :column 12, :end-line 8, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([offset length rightest]))}, :name andel.intervals/->IntervalNode, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 24, :method-params ([offset length rightest]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 8, :end-line 8, :max-fixed-arity 3, :fn-var true, :arglists (quote ([offset length rightest]))}, map->Marker {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 11, :column 12, :end-line 11, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__63145]))}, :name andel.intervals/map->Marker, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 18, :method-params ([G__63145]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__63145]))}, type-in {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 278, :column 7, :end-line 278, :end-column 14, :arglists (quote ([itree [offset size]]))}, :name andel.intervals/type-in, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 14, :method-params ([itree p__63176]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 2, :fn-var true, :arglists (quote ([itree [offset size]]))}, zipper {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 43, :column 7, :end-line 43, :end-column 13, :arglists (quote ([it]))}, :name andel.intervals/zipper, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 13, :method-params ([it]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([it]))}, ->Marker {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 11, :column 12, :end-line 11, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([from to greedy-left? greedy-right? background foreground]))}, :name andel.intervals/->Marker, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 18, :method-params ([from to greedy-left? greedy-right? background foreground]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 6, :fn-var true, :arglists (quote ([from to greedy-left? greedy-right? background foreground]))}, process-single-interval-deletion {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 309, :column 7, :end-line 309, :end-column 39, :arglists (quote ([interval offset length]))}, :name andel.intervals/process-single-interval-deletion, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 39, :method-params ([interval offset length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 3, :fn-var true, :arglists (quote ([interval offset length]))}, update-leaf-offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 108, :column 7, :end-line 108, :end-column 25, :arglists (quote ([loc f]))}, :name andel.intervals/update-leaf-offset, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 25, :method-params ([loc f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc f]))}, plus-infinity {:name andel.intervals/plus-infinity, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 5, :column 1, :end-line 5, :end-column 19, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 5, :column 6, :end-line 5, :end-column 19}, :tag number}, make-interval-tree {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 179, :column 7, :end-line 179, :end-column 25, :arglists (quote ([]))}, :name andel.intervals/make-interval-tree, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, loc->Marker {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 63, :column 7, :end-line 63, :end-column 18, :arglists (quote ([loc]))}, :name andel.intervals/loc->Marker, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 18, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, make-leaf {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 168, :column 7, :end-line 168, :end-column 16, :arglists (quote ([offset length greedy-left? greedy-right? background foreground]))}, :name andel.intervals/make-leaf, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 16, :method-params ([offset length greedy-left? greedy-right? background foreground]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 6, :fn-var true, :arglists (quote ([offset length greedy-left? greedy-right? background foreground]))}, ->IntervalLeaf {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 10, :column 12, :end-line 10, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([offset length rightest greedy-left? greedy-right? background foreground]))}, :name andel.intervals/->IntervalLeaf, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 24, :method-params ([offset length rightest greedy-left? greedy-right? background foreground]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 10, :end-line 10, :max-fixed-arity 7, :fn-var true, :arglists (quote ([offset length rightest greedy-left? greedy-right? background foreground]))}, Marker {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name andel.intervals/Marker, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 11, :record true, :end-line 11, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, scan-intersect {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 156, :column 7, :end-line 156, :end-column 21, :arglists (quote ([loc interval]))}, :name andel.intervals/scan-intersect, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 21, :method-params ([loc interval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc interval]))}, tree-basis->offset {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 88, :column 7, :end-line 88, :end-column 25, :arglists (quote ([offset]))}, :name andel.intervals/tree-basis->offset, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 25, :method-params ([offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([offset]))}, query-intervals {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 334, :column 7, :end-line 334, :end-column 22, :arglists (quote ([itree interval]))}, :name andel.intervals/query-intervals, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 22, :method-params ([itree interval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 2, :fn-var true, :arglists (quote ([itree interval]))}, IntervalNode {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name andel.intervals/IntervalNode, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 24, :type true, :column 12, :internal-ctor true, :line 8, :record true, :end-line 8, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, root {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 46, :column 7, :end-line 46, :end-column 11, :arglists (quote ([loc]))}, :name andel.intervals/root, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 11, :method-params ([loc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loc]))}, insert-one {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 184, :column 7, :end-line 184, :end-column 17, :arglists (quote ([loc interval]))}, :name andel.intervals/insert-one, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 17, :method-params ([loc interval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc interval]))}, interval->tree-basis {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 79, :column 7, :end-line 79, :end-column 27, :arglists (quote ([interval]))}, :name andel.intervals/interval->tree-basis, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 27, :method-params ([interval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([interval]))}, tree-basis->interval {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 91, :column 7, :end-line 91, :end-column 27, :arglists (quote ([interval]))}, :name andel.intervals/tree-basis->interval, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 27, :method-params ([interval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([interval]))}, intersect-inclusive {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 152, :column 7, :end-line 152, :end-column 26, :arglists (quote ([a b]))}, :name andel.intervals/intersect-inclusive, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 26, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, map->IntervalNode {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 8, :column 12, :end-line 8, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__63125]))}, :name andel.intervals/map->IntervalNode, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 24, :method-params ([G__63125]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__63125]))}, offset->tree-basis {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 76, :column 7, :end-line 76, :end-column 25, :arglists (quote ([offset]))}, :name andel.intervals/offset->tree-basis, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 25, :method-params ([offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([offset]))}, metrics-fn {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 31, :column 7, :end-line 31, :end-column 17, :arglists (quote ([leaf]))}, :name andel.intervals/metrics-fn, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 17, :method-params ([leaf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([leaf]))}, IntervalLeaf {:num-fields 7, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name andel.intervals/IntervalLeaf, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 24, :type true, :column 12, :internal-ctor true, :line 10, :record true, :end-line 10, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, collect-with-remove {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 239, :column 7, :end-line 239, :end-column 26, :arglists (quote ([itree offset size]))}, :name andel.intervals/collect-with-remove, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 26, :method-params ([itree offset size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 3, :fn-var true, :arglists (quote ([itree offset size]))}, intersect {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :line 144, :column 7, :end-line 144, :end-column 16, :arglists (quote ([a b]))}, :name andel.intervals/intersect, :variadic false, :file "/home/pavelsergeev/work/andel/src/cljc/andel/intervals.cljc", :end-column 16, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:path greedy-right? to :else :offset :background :rightest offset :leaf-underflown? :split-thresh background :from :foreground rightest :changed? :length :greedy-left? :leaf-overflown? :metrics-fn :reducing-fn from foreground length :greedy-right? greedy-left? :to}, :order [:offset :length :rightest offset length rightest :greedy-left? :greedy-right? :background :foreground greedy-left? greedy-right? background foreground :from :to from to :else :reducing-fn :metrics-fn :leaf-overflown? :split-thresh :leaf-underflown? :path :changed?]}, :doc nil}