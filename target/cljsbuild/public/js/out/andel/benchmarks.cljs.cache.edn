{:rename-macros {}, :renames {}, :externs {Date {now {}}, console {log {}}}, :use-macros {}, :excludes #{}, :name andel.benchmarks, :imports nil, :requires {text andel.text, andel.text andel.text, intervals andel.intervals, andel.intervals andel.intervals, tree andel.tree, andel.tree andel.tree}, :cljs.spec/speced-vars [], :uses nil, :defs {bench-editing {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 95, :column 7, :end-line 95, :end-column 20, :arglists (quote ([markup]))}, :name andel.benchmarks/bench-editing, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 20, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, intervals-tree-info {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 21, :column 7, :end-line 21, :end-column 26, :arglists (quote ([t]))}, :name andel.benchmarks/intervals-tree-info, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 26, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, bench-delete {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 85, :column 7, :end-line 85, :end-column 19, :arglists (quote ([markup]))}, :name andel.benchmarks/bench-delete, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 19, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, play-query {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([model {:keys [from to]}]))}, :name andel.benchmarks/play-query, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 17, :method-params ([model p__68503]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model {:keys [from to]}]))}, current-time! {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 9, :column 7, :end-line 9, :end-column 20, :arglists (quote ([]))}, :name andel.benchmarks/current-time!, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, bench {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 30, :column 7, :end-line 30, :end-column 12, :arglists (quote ([name f & {:keys [count], :or {count 10}}])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(name f {:keys [count], :or {count 10}})], :arglists ([name f & {:keys [count], :or {count 10}}]), :arglists-meta (nil)}}, :name andel.benchmarks/bench, :variadic true, :file "src/cljs/andel/benchmarks.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(name f {:keys [count], :or {count 10}})], :arglists ([name f & {:keys [count], :or {count 10}}]), :arglists-meta (nil)}, :method-params [(name f {:keys [count], :or {count 10}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists ([name f & {:keys [count], :or {count 10}}])}, bench-insert-base {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 48, :column 7, :end-line 48, :end-column 24, :arglists (quote ([markup]))}, :name andel.benchmarks/bench-insert-base, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 24, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, bench-query-base {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 67, :column 7, :end-line 67, :end-column 23, :arglists (quote ([markup]))}, :name andel.benchmarks/bench-query-base, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 23, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, bench-type-in {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 75, :column 7, :end-line 75, :end-column 20, :arglists (quote ([markup]))}, :name andel.benchmarks/bench-type-in, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 20, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, text-tree-info {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 12, :column 7, :end-line 12, :end-column 21, :arglists (quote ([t]))}, :name andel.benchmarks/text-tree-info, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 21, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, bench-insert {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([markup]))}, :name andel.benchmarks/bench-insert, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 19, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, bench-query {:protocol-inline nil, :meta {:file "/home/pavelsergeev/work/andel/src/cljs/andel/benchmarks.cljs", :line 54, :column 7, :end-line 54, :end-column 18, :arglists (quote ([markup]))}, :name andel.benchmarks/bench-query, :variadic false, :file "src/cljs/andel/benchmarks.cljs", :end-column 18, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:insert :leafs :delete :total :nodes :from :count :average :to}, :order [:nodes :leafs :count :total :average :from :to :insert :delete]}, :doc nil}